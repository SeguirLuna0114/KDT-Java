* 문자 처리 함수

1. UPPER(string)
: 문자열 내의 모든 알파벳 문자를 대문자로 변환하는 함수
	- 숫자나 다른 문자는 변경되지 않음

ex) SELECT * FROM emp WHERE job = upper('manager');
   - MANAGER"라는 문자열을 UPPER 함수를 사용하여 대문자로 변환하여 검색


2. LOWER(string)
: 문자열 내의 모든 알파벳 문자를 소문자로 변환하는 함수
	- 숫자나 다른 문자는 변경되지 않음

ex) SELECT * FROM emp WHERE lower(job) = 'manager';
   - LOWER 함수를 사용하여 "job" 열의 값을 모두 소문자로 변환하여 비교


3. INITCAP(string)
: 문자열의 각 단어의 첫 글자를 대문자로, 나머지 글자를 소문자로 변환하는 함수
	- 문장이나 문단의 단어를 보기 좋게 정리하거나 표시할 때 유용

ex) SELECT INITCAP('harry potter and the chamber of secrets') FROM dual;
    - 결과는 'Harry Potter And The Chamber Of Secrets'


4. LENGTH(string)
: 문자열의 문자 개수(길이)를 세어 반환하는 함수
	- 문자열 내에 있는 모든 문자(알파벳, 숫자, 특수 문자, 공백 등)의 개수를 세어 길이를 계산

ex) SELECT LENGTH('12345') FROM dual;
    - '12345' 문자열의 길이를 계산하면 결과는 5
ex) SELECT LENGTH('Hello, World!') FROM dual;
    - 'Hello, World!' 문자열의 길이를 계산하면 결과는 13


5. LENGTHB(string)
: 주어진 문자열의 바이트 수를 계산하여 문자열의 길이를 반환
	- 문자열의 실제 저장 공간을 확인하고자 할 때 사용
	- UTF-8 같은 멀티바이트 문자셋에서, 영문 1글자 : 1byte, 한글 1글자: 3byte

ex) SELECT LENGTHB('안녕하세요') FROM dual;
   - 한 글자당 3바이트로 계산되어 총 15바이트가 반환
ex) SELECT LENGTHB('Hello, World!') FROM dual;
     - ASCII 문자셋에서는 13바이트가 반환


6. SUBSTR(string, start_position, length)
: 문자열 내에서 지정된 위치부터 지정된 길이만큼의 부분 문자열을 반환하는 함수
	- string: 부분 문자열을 추출하고자 하는 원본 문자열
	- start_position: 추출을 시작할 위치. 1부터 시작하며, 첫 글자는 1번 위치
			- 맨 앞의 문자부터 시작할 경우, n (앞에서부터)
			- 맨 뒤의 문자부터 시작할 경우, -n (뒤에서부터)
	- length: 추출하고자 하는 부분 문자열의 길이

ex) SELECT SUBSTR('Hello, World!', 8, 5) FROM dual;
    - 문자열에서 8번 위치부터 시작하여 길이가 5인 부분 문자열을 추출 => 결과: World
ex) SELECT * FROM emp WHERE substr(ename, -1, 1) = 'E';
    - emp테이블의 ename컬럼에서 맨 뒤(-1)에서 첫번째 위치부터 길이가 1인 부분 문자열 추출 = 'E'

** 숫자 데이터 타입의 열에 SUBSTR 함수를 적용하려고 하면 오류가 발생
ex) SELECT SUBSTR(TO_CHAR(salary), 2, 2) FROM emp;
   -  "emp" 테이블의 "salary" 열을 문자열로 변환하고, 
      그 문자열에서 2번 위치부터 시작하여 길이가 2인 부분 문자열을 추출

** 날짜 데이터를 문자열 함수인 SUBSTR를 사용하여 처리하고자 하는 것은 가능
   단, 문자열로 표현된 "YYYY-MM-DD" 형식과 유사한 경우에만 작동
ex) SELECT substr(hiredate, 1, 2) as "년",
       	   substr(hiredate, 4, 2) as "월",
           substr(hiredate, 7, 2) as "일" FROM emp;



7. INSTR(대상 문자열, 검색 대상 부분 문자열, 시작 위치, 몇번째 발견할 인스턴스)
: 주어진 문자열 내에서 특정 부분 문자열의 위치를 찾아주는 역할
	- 대상 문자열 (Target String): 이 문자열 내에서 부분 문자열을 찾음
	- 검색 대상 부분 문자열 (Search String): 대상 문자열에서 찾으려는 부분 문자열

	- 옵션) 시작 위치 (Start Position): 검색을 시작할 대상 문자열의 위치를 나타내는 숫자
					  생략하면 기본적으로 1부터 검색을 시작
	- 옵션) 몇번째 발견할 인스턴스 (Occurrence): 검색 대상 부분 문자열이 여러 번 나타날 경우
					      몇 번째 발견한 인스턴스를 찾을지를 지정하는 숫자

	- 문자열의 인덱스는 '앞쪽에서' 1부터 시작(기본적으로 앞쪽에서부터 검색)
	- INSTR 함수의 반환값은 항상 정수(integer)
	  찾는 부분 문자열이 발견되지 않는 경우에는 0을 반환
	- 빈 공백 역시 하나의 문자로 취급되며, 문자열에서 위치를 가짐

	* 형식) 	1. INSTR(대상 문자열, 검색 대상 부분 문자열)
			: 문자열에서 검색할 문자열의 위치
		2. INSTR(대상 문자열, 검색 대상 부분 문자열, 시작 위치, 몇번째 발견)
			: 대상 문자열 내에서 검색 대상 부분 문자열의 특정 발견 인스턴스의 위치


* 특정 기호로 문자열을 채움
8. LPAD(원본 문자열, 총 길이, 채울 문자) - Left Padding의 약자
: 문자열을 '왼쪽에' 지정된 문자로 '채워서' 원하는 길이로 만드는 역할
	- 원본 문자열: 길이를 늘릴 대상이 되는 원본 문자열
	- 총 길이: 결과 문자열이 가져야 할 전체 길이를 나타내는 숫자
	- 채울 문자: 원본 문자열의 '왼쪽'에 추가로 채울 문자(주로 공백, 특정 문자 사용)

	- 데이터의 정렬이나 포맷팅에 유용하게 사용되는 문자열 함수
ex) SELECT lpad('Oracle', 20, '#') FROM dual;       -- ##############Oracle


9. RPAD(원본 문자열, 총 길이, 채울 문자) - Right Padding의 약자
: 문자열을'오른쪽에' 지정된 문자로 '채워서' 원하는 길이로 만드는데 사용
	- 원본 문자열: 길이를 늘릴 대상이 되는 원본 문자열
	- 총 길이: 결과 문자열이 가져야 할 전체 길이를 나타내는 숫자
	- 채울 문자: 원본 문자열의 '오른쪽'에 추가로 채울 문자(주로 공백, 특정 문자 사용)

	- 데이터의 정렬이나 포맷팅에 유용하게 사용되는 문자열 함수
ex) SELECT rpad('Oracle', 20, '#') FROM dual;       -- Oracle##############



10. LTRIM(원본 문자열, 제거할 문자) - Left Trim의 약자
: 문자열의 왼쪽(앞쪽)에서 특정 문자나 공백을 제거하는 역할
	- 원본 문자열: 문자열에서 제거할 문자를 제외한 나머지 문자열
	- 제거할 문자: 원본 문자열의 '왼쪽'에서 제거하고자 하는 문자나 공백을 지정
		      제거할 문자가 생략된 경우에는 공백
ex) SELECT LTRIM('   Hello   ') AS trimmed_string FROM dual;
	- 제거할 문자가 없으므로 함수는 문자열의 왼쪽에 있는 공백을 모두 제거하여 "Hello " 반환


11. RTRIM(원본 문자열, 제거할 문자) - Right Trim의 약자
: 문자열의 오른쪽(뒤쪽)에서 특정 문자나 공백을 제거하는 역할
	- 원본 문자열: 문자열에서 제거할 문자를 제외한 나머지 문자열
	- 제거할 문자: 원본 문자열의 '오른쪽'에서 제거하고자 하는 문자나 공백을 지정
		      제거할 문자가 생략된 경우에는 공백
ex) SELECT rtrim('  Oracle  ') FROM dual;
	- 제거할 문자가 없으므로 함수는 문자열의 왼쪽에 있는 공백을 모두 제거해 "Oracle  " 반환


12. TRIM([leading | trailing | both] 제거할 문자 FROM 원본 문자열)
: 문자열의 양쪽(앞뒤)에서 특정 문자나 공백을 제거하는 역할
	- leading: 문자열의 왼쪽(앞쪽)에서 제거하고자 하는 문자나 공백을 지정
	- trailing: 문자열의 오른쪽(뒤쪽)에서 제거하고자 하는 문자나 공백을 지정
	- both: 문자열의 양쪽(앞뒤)에서 제거하고자 하는 문자나 공백을 지정
		leading과 trailing을 생략할 경우, 기본적으로 양쪽에서 공백 제거(both)

	- 제거할 문자: 제거하고자 하는 문자나 공백을 지정
		      제거할 문자가 생략된 경우에는 공백을 제거
	- 원본 문자열: 제거할 문자를 제외한 문자열

	- 문자열의 앞뒤에 있는 불필요한 공백이나 문자를 제거할 때 사용
ex) SELECT trim('a' from 'aaaaaOracleaaaaa') from dual;		-- Oracle


