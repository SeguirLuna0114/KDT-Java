* 저장 함수(Stored Function)
 : 저장 프로시저와 유사한 기능을 수행하지만,
   실행 결과를 돌려주는 역할을 수행
	- 데이터베이스 내에서 재사용 가능한 코드 블록
	- 값을 반환하는 데 사용되며, SQL 문에서 표현식으로 사용될 수 있음
	- 반환 값을 가질 수 있으며, 
	  호출된 함수는 해당 값을 반환하여 사용자가 SQL 문에서 활용할 수 있음

	- 주로 계산 작업이나 특정 데이터 변환을 위해 사용(숫자 계산, 문자열 조작 등을 수행)
	- SQL 문에서 표현식 내에서 사용될 수 있으며, 함수 호출 결과를 즉시 사용 가능
	

o 저장 함수 생성
구문)	CREATE OR REPLACE FUNCTION function_name (
		parameter1 datatype1, 		-- datatype의 경우 테이블명.컬럼명%TYPE으로도 작성
		parameter2 datatype2, 
		...
	)
	RETURN return_datatype
	IS
    		-- 변수 및 로직 정의
	BEGIN
    		-- 함수 로직
    		RETURN value_to_return;
	END;
	/

		- parameter1 datatype1: 함수에 전달될 입력 매개변수(parameter)를 정의
					각 매개변수는 해당 데이터 유형(datatype)을 가져야 함
		- RETURN return_datatype: 함수가 반환할 값의 데이터 유형을 정의
		- IS: 함수의 시작을 나타내는 키워드
		      주로 반환되는 변수를 정의하고 초기화
		- BEGIN: 함수의 본문(로직)을 시작하는 키워드
		- RETURN value_to_return;: 함수의 실행 결과로 반환할 값을 지정
		- END;: 함수 본문의 끝
		- /: 함수 정의를 끝내는 구분 기호



o 저장함수 목록 확인
구문)	SELECT * FROM user_source;
	- 현재 사용자가 소유한 모든 저장 프로시저, 함수, 패키지 등의 PL/SQL 코드를 조회
	- user_source 뷰는 데이터베이스 객체의 소스 코드를 확인하는 데 사용

구문)	SELECT * FROM user_source 
	WHERE TYPE = 'FUNCTION' AND NAME = 'function_name';
	- 해당 저장 함수의 소스 코드와 관련된 정보가 표시됨



o 저장함수 실행 방법
1) 저장함수를 SQL문에 포함해서 실행
	- 저장 함수를 호출하는 부분을 SQL 문에서 직접 사용
구문)	SELECT function_name (param1, param2, ...)
	FROM table_name
	WHERE condition;
		- table_name : 함수 실행에 필요한 데이터를 제공하는 테이블의 이름
		- condition : 함수가 실행될 조건을 지정
			     함수가 실행될 조건은 인자(param)와 관련된 조건문


2) EXECUTE명령어와 바인드 변수를 사용하여 저장함수 실행
구문)	(1) 바인드 변수 선언(= 저장 함수의 결과를 저장할 변수)
		VARIABLE var_name var_type;
		- var_name: 바인드 변수 이름 선언
		- var_type: 바인드변수 데이터 타입(number, varchar2...)

	(2) 저장 함수 실행
		EXECUTE :var_name := function_name(param1, param2, ...);
		- function_name: 실행할 저장함수 이름
		- param1, param2, ... : 저장함수에 전달되는 인자
		- var_name: 함수 실행 결과를 바인드 변수에 저장

	(3) 결과 출력
		PRINT var_name;
		- var_name 바인드 변수에 저장된 결과를 출력


3) PL/SQL블록 내에서 저장함수 실행
구문)	DECLARE
   		-- 변수 선언 : 함수의 결과를 저장하거나 중간 계산 값을 보관하는 변수 선언
   		변수명 데이터타입;

	BEGIN
   		-- 저장 함수 실행 및 결과 저장 : 저장 함수를 호출하고 결과를 변수에 저장
   		변수명 := 저장함수명(인자);

   		-- 결과 처리 또는 출력
   		-- 예: DBMS_OUTPUT.PUT_LINE('결과: ' || 변수명);

	END;




