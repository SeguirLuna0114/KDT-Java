☆ DDL(데이터 정의 언어)명령어
: 데이터베이스 구조를 정의, 변경 및 제거하기 위해 사용되는 명령어들의 집합
- 데이터베이스 구조를 정의하거나 수정하는 데 사용되며, 테이블, 인덱스, 뷰 등과 관련됨


1. CREATE : 데이터베이스 객체(테이블, 뷰, 인덱스)를 생성하는 데 사용되는 명령어
o 테이블 생성
  1) CREATE TABLE 명령: 데이터를 저장하기 위한 새로운 테이블을 생성하는데 사용
	- 컬럼 이름, 데이터 타입, 제약 조건 등을 지정 가능
  	SQL> create table 테이블명 (컬럼명  데이터타입 	제약조건, 
		              	   컬럼명  데이터타입  	제약조건, ......
				    테이블 제약조건);

		- 각 컬럼은 이름과 데이터 타입을 가지며, 
		  필요에 따라 추가적인 제약 조건(constraints)을 가질 수 있음
		-  각 컬럼에 적용할 제약 조건을 지정 가능
			* 제약조건: 일반적으로 NOT NULL, UNIQUE, PRIMARY KEY, FOREIGN KEY
		- 테이블 자체에 적용되는 제약 조건을 지정 가능
			- 주로 테이블의 열 간 관계를 정의하는데 사용

  	SQL> create table member01(
					id  varchar2(20), 
					name  varchar2(20), 
					address varchar2(50), 
					phone  varchar2(20));


* Primary Key(기본키): 테이블 내의 각 행(row)을 유일하게 식별하는데 사용되는 열(column)
	- 중복되지 않는 값을 가짐 
	   => 열(column)의 값이 각 행(row)마다 유일. 같은 기본키 값을 가진 두개이상의 행X
	- 데이터 베이스 내에서 특정 행을 식별하는 데 사용
	-  NULL 값을 가질 수 없음.


  2) 테이블을 생성할 때 서브쿼리를 사용하는 경우
	- 서브쿼리의 결과를 기반으로 새로운 테이블을 만들 수 있음
	- CREATE TABLE 문 내에서 서브쿼리를 사용하여 
	   데이터를 추출하거나 가공하여 새로운 테이블을 생성

	SQL > 	CREATE TABLE new_table AS
		SELECT columns
		FROM existing_table
		WHERE condition;

		- new_table: 생성될 새로운 테이블의 이름을 지정
		- columns: 새로운 테이블의 열을 지정
			   일반적으로 서브쿼리의 결과 열을 그대로 사용하거나 변형하여 지정
		- existing_table: 서브쿼리의 데이터를 추출할 기존 테이블의 이름을 지정
		- condition: 필요한 경우 데이터를 필터링하기 위한 조건을 지정

	SQL > employees" 테이블에서 "first_name"과 "last_name" 열만 추출하여 
	     새로운 "employee_names" 테이블을 생성
		CREATE TABLE employee_names AS
		SELECT first_name, last_name
		FROM employees;

	SQL > 원하는 행(row, 데이터)으로 구성된 복사본 테이블 생성
		CREATE TABLE emp04 AS SELECT * FROM emp WHERE deptno=10;

	SQL > 'WHERE 1=0' 조건을 사용해, 테이블 구조만 복사
		- WHERE 1=0 조건은 항상 거짓이므로, "emp" 테이블에서 어떠한 행도 선택되지 않음
		- 따라서,  동일한 열 구조를 가지지만 데이터가 포함되지 X
		CREATE TABLE emp05 AS SELECT * FROM emp WHERE 1=0;


	i) 서브쿼리에서 선택한 열과 데이터 타입은 새로운 테이블의 열과 데이터 타입으로 반영됨
	ii) 제약 조건은 서브쿼리로 생성되는 테이블에 자동으로 복사되지 않음
		=> ALTER TABLE 문을 사용하여 제약 조건을 추가 가능
			- 기본 키(primary key)나 외래 키(foreign key) 제약 조건
	iii) 인덱스를 추가하여 데이터의 검색 및 조회 성능을 향상시킬 수 있음



o 테이블 목록 출력
   SQL> select  *  from  tab;


o 테이블 구조 출력
  SQL> desc[ribe]  member01;


  - CREATE INDEX: 인덱스를 생성하여 데이터베이스의 검색 성능을 향상시킴
  - CREATE VIEW: 가상 테이블로써 하나 이상의 기본 테이블을 기반으로 만들어지며, 
		 특정한 데이터를 추출하거나 조작하기 위해 사용



2. ALTER: 이미 존재하는 데이터베이스 객체를 수정하는 데 사용되는 명령어
  - ALTER TABLE: 이미 존재하는 테이블의 구조를 수정
	-  컬럼 추가, 삭제, 변경, 제약 조건 추가 등이 가능
o 테이블 명 변경
  SQL> alter  table  구테이블명  rename  to  신테이블명;
  SQL> alter  table  member01  rename  to  member02;
  ※ SQL> rename  구테이블명  to  신테이블명;  
	  으로도 테이블명 변경 가능함.
     SQL> rename  member01   to  member02;


o 테이블에 새로운 컬럼 추가 ( add 연산자 )
	ALTER TABLE table_name
	ADD column_name data_type;

  SQL> alter  table  member01 add (password  varchar2(30));




o 테이블에 제약 조건 추가 ( add 연산자 )
	ALTER TABLE table_name
	ADD CONSTRAINT constraint_name constraint_definition;




o 테이블의 컬럼 수정/변경 ( modify 연산자 )
	ALTER TABLE table_name
	MODIFY column_name new_data_type;

  SQL> alter table member01 modify (password  varchar2(50)  not  null);
  ※ 컬럼이 이미 데이터를 가지고 있을 경우 다른 데이터형
     으로  변경이 불가능함.
  ※ 컬럼명은 modify 안됨.


o 테이블의 컬럼 삭제 ( drop 연산자 )
	ALTER TABLE table_name
	DROP COLUMN column_name;


  SQL> alter  table  member01  drop  column  column_name;
  SQL> alter  table  member01  drop  column  password;
  cf. alter  table  member01  drop(password);


  - ALTER INDEX: 이미 존재하는 인덱스를 수정
	- 주로 인덱스를 리빌드하거나 다시 구성하는 데 사용
   - ALTER VIEW: 이미 존재하는 뷰의 정의를 수정



3. DROP: 데이터베이스 객체를 삭제하는 데 사용되는 명령어
  - DROP TABLE: 테이블을 삭제
	- 테이블과 관련된 데이터, 인덱스, 제약 조건도 함께 삭제

o 제약조건의 삭제
  SQL> alter  table  member01  drop  primary  key;


o 테이블 삭제
	DROP TABLE table_name;

  SQL> drop  table  member01;

cf. 오라클 10g부터는 테이블을 삭제하면     BIN    $4emTP3hqGbvgMGQ9jRYEcw==$0 와 같은
    임시테이블로 교체된다. 


이 임시 테이블을 완전 삭제하는 방법은 ?
SQL> purge recyclebin; 

처음부터 테이블을 완전하게 삭제하는 방법은 ?
SQL> drop  table  member01  purge;




4. TRUNCATE: 테이블의 모든 데이터를 삭제하지만 테이블 구조는 유지하는 명령어
	- DELETE와는 달리 로그 파일에 기록되지 않아서 대량의 데이터 삭제 시 빠르게 동작
	- TRUNCATE"는 테이블 구조를 유지하며, 초기화된 테이블을 다시 사용할 수 있음

o 테이블 모든 데이터 삭제(단, 테이블 구조는 유지)
	TRUNCATE TABLE table_name;


5. RENAME: 데이터베이스 객체의 이름을 변경하는 데 사용되는 명령어
	- RENAME: 객체(테이블, 컬럼, 뷰 등) 이름을 변경할 때 사용

o 테이블의 컬럼 이름 변경 ( rename 연산자 )
	ALTER TABLE table_name
	RENAME COLUMN old_column_name TO new_column_name;
















