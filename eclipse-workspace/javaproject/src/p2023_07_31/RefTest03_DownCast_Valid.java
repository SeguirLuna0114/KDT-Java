package p2023_07_31;

//* 다운 캐스팅(강제 형변환)
//: 기본 클래스의 객체를 파생 클래스 타입으로 형변환하는 것
//	"부모 클래스의 참조변수를 자식 클래스 타입으로 형변환하는 것"
//
//1. 슈퍼클래스에서 서브클래스로 형변환 하는것
//2. 참조 가능한 영역이 확대가 된다.
//3. 컴파일러에 의해서 암시적 형변환(자동 형변환)이 되지 않기    
//  때문에 자료형을 생략할 수 없다.(강제 형변환)
//	* 메소드의 반환되는 자료형이 최상위 클래스인 Object형인 경우 사용
//4. 다운캐스팅을 하기 위해선, 자식클래스의 객체 생성 -> 상위 클래스로 업 캐스팅 한 후
//   다시 다운캐스팅을 해야 함

class Parent03 {
	public void parentPrn() {
		System.out.println("슈퍼 클래스 : ParentPrn 메서드");
	}
}

class Child03 extends Parent03 {
	public void childPrn() {
		System.out.println("서브 클래스 : ChildPrn 메서드");
	}
}

class RefTest03_DownCast_Valid {
	public static void main(String[] args) {
		
		// 안전하게 다운캐스팅 하기 위해서는, 먼저 업캐스팅을 진행
		// 업캐스팅(자동 형변환)
		Parent03 p = new Child03(); // 서브 클래스로 인스턴스 선언
		// 이때, 객체p는 부모클래스가 상속해준 메소드만 호출 가능
		p.parentPrn();
		// 상속받은 클래스 메소드가 이닌 경우(자식클래스에서 정의한 클래스의 메소드)는 접근X
//		p.childPrn();	// 컴파일 에러
		
		// 업캐스팅 이후, 다운캐스팅을 진행
		// 자식(서브)클래스를 이용하여 레퍼런스 변수 선언
		// 선언만 한 상태기에, 주소값을 갖지X
		Child03 c;
		
		System.out.println("---------------->>");
		
		// 다운캐스팅(강제 형변환): 부모객체를 자식객체로 전달하는 방법
		// 서브 클래스 레퍼런스 변수에 슈퍼 클래스의 레퍼런스 값이 대입됨
		c = (Child03) p; // 강제 형변환으로 다운 캐스팅
		
		// 부모객체의 주소값을 받은 c의 경우에는(다운캐스팅 된 경우),
		// 상속받은 메소드와 자식(본인)클래스 내 메소드를 모두 호출 가능
		// => "다운캐스팅으로 참조가능 영역 확대됨"
		c.parentPrn();
		c.childPrn();
		
		// 두줄로 정의된 것을 한줄로 작성 가능
		Child03 c1 = (Child03) p;	// 다운캐스팅(강제 형변환)
		c1.parentPrn();
		c1.childPrn();
	}
}