package p2023_07_27;

// 상속에서의 생성자
// 1. 생성자는 기본적으로 상속X
// 2. 자식클래스를 이용해서 객체를 생성할때 자식클래스의 
//	  생성자(기본생성자,매개변수 있는 생성자 모두 가능)가 호출되면, 
//	  부모클래스의 기본생성자가 자동으로 호출된다.
// 3. 부모 클래스에 기본생성자가 없고, 매개변수가 있는 생성자가 있는 경우에는
// 	  더이상 컴파일러가  기본 생성자를 자동으로 생성해 주지 않는다.
// 4. 부모 클래스의 매개변수가 있는 생성자를 자식 클래스에서 호출 할때는
// 	  super() 키워드를 이용해서 호출할 수 있다.

// super()키워드
// 1. super(매개변수)키워드는 부모 클래스의 매개변수를 가진 생성자를 호출할 때 사용
// 2. 자식 클래스의 생성자 안에서 첫번째 라인에 사용해야 함
// 3. super(매개변수)를 이용하여 부모 클래스의 매개변수를 가진 생성자를 호출하면,
//	  더이상 부모 클래스의 기본 생성자를 호출하지X

// 부모클래스
class Point2D_06 {
	// 정수필드
	protected int x = 10;
	protected int y = 20;

	// 기본생성자
	public Point2D_06( ){
	  System.out.println("슈퍼 클래스인 Point2D 생성자 호출"); 
	}

	// 매개변수를 가진 생성자
	public Point2D_06(int xx, int yy) {
		x = xx;
		y = yy;
	}
}


// 자식클래스
class Point3D_06 extends Point2D_06 {
	// 정수 필드
	protected int z = 30;

	// print()메소드
	public void print() {
		// 부모클래스의 매개변수를 가진 생성자 호출시에는, 
		// 자식클래스의 '생성자'내에 작성
//		super(50, 60);	
		System.out.println(x + ", " + y + ", " + z);
	}

	// 기본생성자
	public Point3D_06() {
		// 자식클래스의 기본생성자가 호출되면, 연쇄적으로 부모클래스의 기본생성자가 호출됨
		// 만일, 부모클래스에서 매개변수를 가진 생성자만 존재한다면 오류가 남
		// =>해결방법 1) 부모클래스 내에 기본생성자를 작성해줌
		// 		   2) 자식클래스 생성자 내에서 super(매개변수)키워드를 사용하여 부모클래스의 매개변수를 가진 생성자 호출
		super(50, 60);		// super(매개변수)키워드로 부모클래스의 매개변수가 있는 생성자 호출
		System.out.println("서브 클래스인 Point3D 생성자 호출");
	}
}

// 메인클래스
class SuperTest06_Inherit_ConstArgs_super {
	
	public static void main(String[] args) {
		// 자식클래스의 객체생성
		Point3D_06 pt = new Point3D_06();
		
		pt.print();
	}
}