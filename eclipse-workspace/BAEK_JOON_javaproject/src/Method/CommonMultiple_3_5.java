package Method;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

// 봉지는 3킬로그램 봉지와 5킬로그램 봉지가 있다.
// 최대한 적은 개수의 봉지를 들고 N킬로그램을 배달하려 할 때, 봉지의 개수를 구하는 프로그램
//ex) 18킬로그램 = 5킬로*3 + 3킬로*1 
// 만일, 정확하게 N킬로그램을 만들 수 없다면, -1을 출력

// 알고리즘
// 봉지의 개수 최소화를 위해선, 5킬로 봉지를 최대로 구성해야 함.
// => N을 5로 나누었을때, 나머지 값이 +3인 경우 3킬로 1봉지를 구비하면 됨. => 봉지개수 최소
// 3킬로 봉지만을 소비하는 경우는, 3킬로일 경우와 6킬로일 경우이고,
// => 6킬로 이후로는 적어도 5킬로가 1봉지는 사용됨 ex) 6+5(11킬로)=5킬로1개 + 3킬로2개
// 9킬로의 경우에는 3킬로 3개가 최소 개수. 9킬로 +5킬로*n => 봉지의 개수는 3에서 1씩 증가
// 따라서, n>=3일 경우, 5의배수 + 1번째 봉투의 개수: (n/5) + (n%5=1), 5의배수 + 3번째 봉투의 개수: (n/5) + (n%5=3)
// => (n/5)+1: 5로 나눈 몫의 +1이 봉지개수
// 또한 n>=8인 경우, 5의배수 + 2번째 봉투의 개수는 (n/5) + (n%5=2)이고, 이때, n%5=2
// n이 4일때와 7일때는 봉지로 정확히 만들수 없기에 -1 반환
public class CommonMultiple_3_5 {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		
		System.out.println("숫자 N을 입력하세요(3 <= N <= 5000)");

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		
		// 주어진 N킬로그램을 5로 나누었을 경우 나올 수 있는 나머지: 0, 1, 2, 3, 4
		if (N==4 || N==7) {
			// 3+5(8)이하인 경우에는 정확히 만들 수 없는 경우 존재
			System.out.println(-1);
		}
		else if (N % 5 == 0) {
			System.out.println("봉지의 개수: "+(N / 5));
		}
		// N이 1,2인 경우는 제외(3 <= N <= 5000)
		// N % 5 == 1: N이 6인경우(3킬로 2개)(6/6(1)+1)) or N이 11인 경우(3킬로 2개+5킬로 1개)(11/5(2)+1)
		// N % 5 == 2: N이 7인경우(-1) or N이 12인 경우(3킬로 4개)(12/5=2+2) or N이 17인 경우(3킬로 4개 + 5킬로 1개)(17/5(3)+2)...
		// N % 5 == 3: N이 3인경우(3킬로 1개)(3/5(0)+1) or N이 8인경우(5킬로 1개 + 3킬로 1개 => 총 2개)
		// N % 5 == 4: N이 4인경우(-1) or N이 9인경우(3킬로 3개)(9/5(1)+2) or 14인 경우(3킬로 3개+5킬로 1개=> 총4개)(14/5(2)+2) 
		else if(N % 5 == 1 || N % 5 ==3) {
			// N을 5로 나눈 몫 + 1
			System.out.println("봉지의 개수: "+((N / 5)+1));
		}
		else if(N % 5 == 2 || N % 5 ==4) {
			// N을 5로 나눈 몫 + 2
			System.out.println("봉지의 개수: "+((N / 5)+2));
		}
		
	}

}
