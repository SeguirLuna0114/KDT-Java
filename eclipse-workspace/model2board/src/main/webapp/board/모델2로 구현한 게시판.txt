* 모델2로 구현한 게시판
	- 커넥션 풀로 DB 연동
	- 댓글기능, 첨부파일 업로드/다운로드

* 모델2(Model-View-Controller 2) 아키텍처로 구현된 게시판
	1) Model 클래스 : 게시물과 댓글을 다는 모델 클래스 생성
					- 파일 업로드/다운로드를 위한 필드(DTO클래스)
					- DAO클래스를 작성하여 데이터베이스 연동 로직을 처리
	2) 컨트롤러 클래스 : 게시물과 댓글을 작성, 수정, 삭제, 조회하는 컨트롤러 메소드 작성
					 파일 업로드 및 다운로드를 처리하는 메소드 작성 필요
					 -- 서블릿 클래스로 작성
	3) 서비스 클래스 : 비즈니스 로직을 처리하는 클래스 - 게시물과 댓글 관련 로직 구현
	4) 뷰 : 댓글 작성 및 파일 업로드를 위한 폼


model2board - src - main - java - controller  -  BoardController.java (Controller)

	        		       			model  -  BoardBean.java (DTO)

	                                dao  -  BoardDAO.java (DAO)

	                                service  -   Action.java (부모 인터페이스)		       		       
				                                  ActionForward.java (포워딩 설정)			       	       
				                                  BoardAddAction.java (글작성)
				                                  BoardListAction.java (글목록)
				                                  BoardDetailAction.java (상세 페이지)
				                                  BoardReplyForm.java (댓글 폼)
				                                  BoardReply.java (댓글)
				                                  BoardModifyForm.java (글수정 폼)
				                                  BoardModify.java (글수정)
				                                  BoardDeleteForm.java (글삭제 폼)  
				                                  BoardDelete.java (글삭제)     	


		          			webapp  -  board  -   board_write.jsp (글작성 폼)
			                          			  board_list.jsp (글목록)
										     	  board_view.jsp (상세 페이지)
										     	  board_reply.jsp (댓글)
										    	  board_modify.jsp (글수정)
										     	  board_delete.jsp (글삭제)
										     	  file_down.jsp (첨부파일 다운로드)

	                                   boardupload (첨부파일 저장위치)

		                         		META-INF - context.xml (컨넥션풀 환경설정 파일)

				                        WEB-INF - lib -  jstl-1.2.jar
									                     cos.jar
					 				                     ojdbc6.jar
		
					                         	-  web.xml (프로젝트의 환경설정파일)


create table model2board (
	board_num number,
	board_name varchar2(20),
	board_pass varchar2(15),
	board_subject varchar2(50),
	board_content varchar2(2000),
	board_file varchar2(50),
	board_re_ref number,
	board_re_lev number,
	board_re_seq number,
	board_readcount number,
	board_date timestamp,
	primary key(board_num)
);

create sequence model2board_seq
start with 1
increment by 1
nocache;


