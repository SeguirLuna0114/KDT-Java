* JSP와 MyBatis 연동

- JSP(JavaServer Pages)와 MyBatis를 연동하는 것은
  웹 애플리케이션에서 데이터베이스와 상호 작용하는 데 매우 일반적인 작업


1. MyBatis 설정 파일 작성
	- 먼저 MyBatis 설정 파일 (mybatis-config.xml)을 작성
	- 이 파일은 데이터베이스 연결 정보, 매퍼 파일의 위치 및 기타 MyBatis 설정을 정의
	- 데이터베이스 드라이버, URL, 사용자 이름, 암호,
	  데이터베이스 연결 풀링 설정을 여기에 추가
	  (MyBatis의 전반적인 설정을 담당)


2. 매퍼 파일 작성
	- MyBatis 매퍼 파일(XML)을 작성하여 SQL 쿼리와 매핑을 정의
	- XML 파일은 SQL 쿼리와 자바 객체 간의 매핑을 정의
	- SQL 쿼리, 매개변수 매핑, 결과 매핑 등을 이 파일에 기록


3. Java 객체와 MyBatis 연동
 : MyBatis를 사용하여 데이터베이스 작업을 처리하는 Java 클래스를 작성
	- 이 클래스는 MyBatis의 SqlSession을 생성하여 데이터베이스와 상호 작용
	- 매퍼 파일과 상호 작용하여 데이터베이스 액세스를 처리
	- 필요한 데이터를 쿼리하고 결과를 자바 객체에 매핑


4. JSP 페이지 작성
	- JSP 페이지를 작성하여 웹 애플리케이션의 사용자 인터페이스를 설계
	- JSP 페이지에서 데이터를 표시할 위치를 정의
	- MyBatis를 통해 데이터를 가져와 이를 동적으로 렌더링하는 코드를 추가
	=> MyBatis와 연동할 Java 클래스의 메서드를 호출하여 데이터를 렌더링
	- JSP 페이지에서는 MyBatis를 사용한 데이터베이스 액세스 결과를
	  화면에 표시하는 역할 수행


5. 웹 애플리케이션 구성
 : 웹 애플리케이션의 web.xml 파일을 구성
	- 서블릿 및 JSP 페이지를 매핑하고, 필요한 리소스 및 라이브러리를 추가
	- 필요한 서블릿을 정의하고, URL 매핑을 설정하여 JSP 페이지와 Java 클래스를 연결


6. 데이터베이스 연결 설정
 : mybatis-config.xml 파일에 정의한 데이터베이스 연결 정보를 사용하여
  MyBatis가 데이터베이스에 연결하도록 설정
	- 데이터베이스 드라이버, URL, 사용자 이름, 암호 등을 구성



7. 매퍼 파일 및 Java 객체 사용
 : JSP 페이지에서 MyBatis 매퍼 파일과 Java 객체를 사용하여
  데이터베이스 액세스를 수행하고 결과를 가져옴
	- MyBatis를 사용하여 SQL 쿼리를 실행하고 데이터를 가져오며, Java 객체로 변환


8. 데이터 출력 및 표시
 : JSP 페이지에서 MyBatis를 사용하여 가져온 데이터를 동적으로 생성하고
  웹 페이지에 출력하여 사용자에게 표시
	- 예를 들어, 반복문을 사용하여 데이터 목록을 표시하고 HTML 템플릿과 결합하여 결과를 생성


9. 오류 처리
 : 적절한 오류 처리 및 예외 처리를 구현하여 데이터베이스 연동
  및 웹 애플리케이션이 안정적으로 동작하도록 함








