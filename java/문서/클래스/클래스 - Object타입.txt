클래스 - Object타입

* Object 데이터 타입 - 모든 데이터 타입을 다룰 수 있음 
		      (모든 데이터타입을 매개변수로 받을 수 있음)

- method에서 반환타입이 Object로 선언된 경우, 
  Object타입으로 값을 반환 => 이후, 필요한 형태로 캐스팅 해야 함

-Object클래스는 모든 클래스의 최상위 클래스이기에, 모든 자식 클래스의 객체 저장 가능


## 매개변수 타입이 Object인 경우
1) 박싱(new연산자) & 업캐스팅
	// new연산자를 사용해 박싱
	//  & 업캐스팅(Integer 객체를 Object 클래스 타입으로 업캐스팅)
	Object value = new Integer(3);
	- new Integer(3): Integer클래스의 생성자호출 => 정수3을 갖게 초기화
	- Object value = : 생성된 Integer객체를 Object클래스 타입의 변수 value에 할당

2) 자동박싱 & 업캐스팅
	//int형(3)값을 Object형 변수(value)에 할당
	Object value = 3;
	-자동박싱 : 자동으로 기본 데이터타입(int)값을 
		   (Integer)Wrapper클래스로 변환하여 Object클래스 타입 변수로 할당
	-업캐스팅 : Integer객체가 Object클래스 타입 변수로 할당됨. 
		   이때 Object클래스는 최상위 클래스로 모든 자식클래스 객체 저장 가능

## 문자열을 매개변수로 할당하는 경우
- 자동박싱(문자열 -> Object타입) + 업캐스팅 발생
	obj01.setValue("이해할 수 있다.");
	-자동박싱 : 자동으로 String타입의 값을 해당하는 Wrapper클래스로 변환하여
		   Object클래스 타입 변수로 할당
	-업캐스팅 : String객체가 Object클래스 타입으로 할당됨.
	
	// get()메소드를 통해 반환된 값은 String객체가 되고, 
	이때 String객체의 toString()메소드를 호출하여 문자열로 변환
	System.out.println("되돌리는 값은->" + obj01.getValue());

## method의 반환되는 자료형이 Object인 경우
- 메소드가 Object타입의 매개변수를 받도록 정의되었다면, 
  메소드 호출시 어떤 데이터 타입의 값을 전달하더라도 자동으로 박싱 발생

1) 자동박싱 + 업캐스팅
	obj01.setValue(3.4);
	System.out.println("되돌리는 값은->" + obj01.getValue());
	-자동박싱 : 자동으로 기본 데이터타입(double)값을 (Double)Wrapper클래스로 변환하여
		   Object클래스 타입 변수로 할당
	-업캐스팅 : Double객체가 Object클래스 타입 변수로 할당됨.

2) 다운 캐스팅 + 언박싱
	// getValue()메소드 - 반환된 Object 타입의 값을 int 데이터 타입으로 변환
	int n1 = ((Integer)(obj01.getValue())).intValue();
	-다운 캐스팅: ((Integer)(obj01.getValue()))
		반환되는 데이터 타입은 Object타입이나, 실제 값은 Integer클래스 객체이기에,
		원래 자료형인 Integer로 다운 캐스팅 수행
	-언박싱: .intValue()
		Integer객체에서 intValue()메소드를 호출해 
		Integer객체가 감싸고 있는 int값으로 언박싱
		
2-1) 다운 캐스팅 + 자동 언박싱
	int n2 = ((Integer)(obj01.getValue()));
	-자동 언박싱: Integer객체가 int타입의 변수에 할당되어 자동으로 
		     Integer객체가 int값으로 언박싱됨






