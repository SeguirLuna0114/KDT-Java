* Data 입.출력 처리

  import  java.io.*;

o 스트림(Stream) : 데이터의 흐름을 나타내는 추상화 개념
 	- 데이터를 일련의 연속적인 요소들로 처리하고 다루는 방법을 제공
  	- 데이터가 이산적인 요소들로 구성되어 있을 때 이를 연속적인 데이터 스트림으로 취급
	- 한 번에 하나씩 요소를 처리
	- 일방향 통신


o 입출력 스트림(Input/Output Stream): 입출력 장치와 프로그램 간의 데이터를 주고받는 통로
	- 다양한 입출력 장치와 프로그램 간에 일관된 방식으로 데이터를 처리
	ex) 파일을 읽을 때 스트림을 사용하여 파일의 데이터를 연속적으로 처리
	- 단뱡향 통신 - 입력 스트림: 데이터를 읽기 위한 통로
		    - 출력 스트림: 데이터를 보내기 위한 통로
	- 입출력 스트림 사용시, 항상 예외 처리 주의!!
	  => 입출력 스트림은 IOException을 발생시킬 수 있고,
	     이는 반드시 예외 처리를 해주어야 하는 Checked Exception으로 처리해야 함
		ex) try-catch 블록을 이용하여 처리
		ex) 예외를 throws키워드로 던져 상위 호출자로 전달


o 입출력 스트림(Input/Output Stream) 특징
	1. 버퍼링(Buffering): 데이터를 버퍼에 저장한 후, 일정량이 쌓이면 한번에 처리
	2. 직렬화(Serialization): 스트림은 객체를 직렬화하여 데이터로 변환하고,
				역 직렬화하여 다시 객체로 변환 가능
				=> 이를 통해 객체를 파일에 저장하거나 네트워크를 통해 전송가능
	3. 연결(Chaining): 여러개를 연결하여 사용 가능
			ex) 데이터를 읽은 후, 필터링이나 변환작업 수행 가능


o 주요 입출력 스트림의 종류

Stream - Byte Stream                -   입력 (InputStream)
          (1Byte 단위로 데이터를
          전송하는 스트림)            -   출력 (OutputStream)


         Text Stream                -   입력 (Reader)
         (2Byte 단위로 데이터를
          전송하는 스트림)            -   출력 (Writer)




















