* 예외 클래스

0. Exception 클래스 : 모든 예외 클래스의 최상위 클래스인 추상클래스
		- 모든 종류의 예외를 처리함
	1) Exception 예외 클래스는 예외처리 클래스 중 최상위클래스이기에
	   모든 자식들의 예외를 받아서 처리할 수 있음
	2) catch구문에서 Exception클래스로 예외를 받을 때는 
	   가장 마지막 catch구문에서 사용해야 함
	ex)	} catch (ArithmeticException e) {
   			 System.out.println(e.getMessage());
		} catch (NullPointerException e) {
    			System.out.println(e.getMessage());
		} catch (Exception e) {
			// 가장 마지막에 작성(모든 자식클래스의 예외를 받아서 처리)
    			System.out.println(e.getMessage());

1. ArithmeticException : 산술 연산이 잘못되었을 때 발생
		- RuntimeException 클래스를 상속받은 예외, 명시적인 예외 처리가 강제되지 X
	1) 정수를 0으로 나누는 경우: 정수를 0으로 나누는 산술연산은 수학적으로 정의X
	2) 정수 값을 0으로 나머지(%) 연산하는 경우: 정수를 0으로 나머지 연산하는 것은 불가능

2. ArrayIndexOutOfBoundsException : 배열의 범위를 벗어났을때 발생(인덱스가 유효X경우)
		- 배열의 길이가 N이라면 인덱스는 0부터 N-1까지 유효함.

3. NumberFormatException : 문자열을 숫자로 변환할 때 발생
		- RuntimeException 클래스를 상속받은 예외, 명시적인 예외 처리가 강제되지 X
	1) parseXXX 메소드를 사용하여 문자열을 숫자로 변환할 경우, 
	   문자열이 올바르게 구성되지 않으면 발생
	   (parseInt, parseLong, parseFloat, parseDouble)
	ex)	String str2 = "abc";	// 숫자로 변환 불가능한 문자열
		int number2 = Integer.parseInt(str2); // NumberFormatException 발생

	2) 숫자로 변환 가능한 문자열이지만, 범위를 벗어난 경우에도 발생
	ex)	String str = "2147483648"; // int 범위를 벗어나는 문자열
		int number = Integer.parseInt(str); // NumberFormatException 발생

4. NullPointerException : 참조타입(클래스 타입, 배열 타입, 인터페이스 타입) 변수가
			    null인 상태에서 해당 변수를 사용하려 할 경우 발생
		- null은 아무런 객체를 참조하지 않는 상태(메모리 주소값 할당되지x)
	1) 객체를 생성하지 않고 멤버변수나 객체의 메소드를 호출할때 발생
	ex)	String str = null;
		int length = str.length(); // NullPointerException 발생

	2) 배열을 생성하지 않은 상태에서 배열 요소에 접근


5. IOException : 입출력 작업시 발생하는 예외
		- 입출력 작업 중 발생할 수 있는 모든 예외들의 상위클래스
		- RuntimeException을 상속하지 않은 예외들로서, 반드시 예외 처리를 해야함
	1) 입출력 작업이 실패하는 경우
	2) 파일을 찾을 수 없는 경우
	3) 파일/데이터를 읽거나 쓸 때 문제가 발생하는 경우

6. FileNotFoundException : 파일 입출력 작업에서 발생하는 예외
		- IOException의 하위 클래스
	1) 파일을 열거나 읽는 경우 - 파일에 대한 읽기/쓰기 권한이 없는 경우
	2) 해당 경로에 파일이 존재하지 않는 경우
	

7. SQLException : 데이터베이스와 관련된 작업을 수행하는 과정에서 발생할 수 있는 예외
		- 데이터베이스 연결, 쿼리 실행, 트랜잭션 처리 등과 관련된 문제로 발생
		- RuntimeException을 상속하지 않은 예외들로서, 반드시 예외 처리를 해야함
