* 상속에서의 생성자

- 상속에서 생성자는 부모 클래스의 생성자를 자식 클래스가 호출하여, 
  부모클래스의 멤버변수 초기화
- 생성자를 이용하여 상속관계에서 초기화 작업 수행 => 코드의 중복 방지, 효율적 객체 초기화
- 생성자는 클래스 이름과 동일한 이름을 가지며, 리턴 타입X

  1. 생성자는 기본적으로 상속이 되지 않는다

  2. 자식클래스를 이용해서 객체를 생성할때 자식클래스의 
     생성자(기본생성자,매개변수 있는 생성자 모두 가능)가 호출되면,
     부모클래스의 기본생성자가 자동으로 호출된다.
     - 자식클래스의 생성자에서 super()호출을 생략할 경우, 
       자동으로 부모클래스의 기본생성자인 super()가 호출되어 기본생성자가 호출됨
     ### 생성자 체이닝(Constructor Chaining)
	- 자식클래스가 생성될 때, 자식클래스의 생성자가 호출되며 연쇄적으로
	  "부모클래스 생성자가 먼저 실행됨"

  3. 부모 클래스에 기본생성자가 없고, 매개변수가 있는 생성자가 있는 경우에는
     더이상 컴파일러가  기본 생성자를 자동으로 생성해 주지 않는다.
     => 자식클래스의 생성자에서 반드시 'super(매개변수)' 형태로 부모클래스 생성자 호출

  4. 부모 클래스의 매개변수가 있는 생성자를 자식 클래스에서 호출 할때는
     super() 키워드를 이용해서 호출할 수 있다.
     단, super()는 자식 클래스의 생성자 안에서만 사용 가능함.
      - super(): 자식클래스 생성자에서 super()키워드를 사용하여 
		부모 클래스의 "기본생성자"를 명시적으로 호출 가능
		=> 자식클래스에서 부모클래스의 멤버변수 초기화 가능
      - super(매개변수) : 부모클래스의 "매개변수를 받는 생성자" 호출시,
			자식클래스의 생성자에서 super(매개변수)형태로 호출


