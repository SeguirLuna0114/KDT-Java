메소드 오버라이딩(Method Overiding)
: 부모 클래스로 부터 상속받은 메소드를 자식 클래스에서 이름과 형식을 동일하게 사용하고,
    내용을 다르게 정의해서 사용하는 것
= 상속 관계에 있는 클래스들 사이에서,
  부모 클래스의 메소드를 자식 클래스에서 재정의하는 것
= 자식 클래스는 부모 클래스로부터 상속받은 메소드를 그대로 사용하지 않고, 
  필요에 따라 자신의 기능에 맞게 다시 구현하는 것

-다형성(Polymorphism)의 핵심원리
"부모 클래스 타입의 참조 변수를 사용하여 자식 클래스의 객체를 참조할 수 있다"
 : "같은 메소드 이름"을 가진 메소드가 "다양한 형태"로 동작 가능하게 함
	=> 코드의 재사용성, 유지보수성 향상
	=> 상위 클래스의 기능을 확장하거나 수정 가능
- 메소드가 호출되는 시점에 "실제 객체의 타입"을 기반으로 어떤 메소드를 호출할 지 결정
	(메소드 호출 대상은 변수의 타입 기반X)

-규칙
1. 메소드 이름, 매개변수의 개수 및 타입, 반환 타입이 부모 클래스의 메소드와 동일해야 함
2. 접근제어자가 부모클래스의 메소드와 동일하거나, 더 넓은 범위로 설정되어야 함
    (접근제어자: default < protected < public)
	* 상속에서 private접근제어자로 지정될 경우, 상속되지X
3. static메소드 또는 final메소드는 오버라이딩X
	* static메소드는 클래스 수준에서 호출되기에 
	 변수 타입에 상관없이 해당 클래스의 메소드가 호출됨
	(부모클래스와 자식클래스간의 static메소드는 완전히 별개의 메소드로 간주됨)



