* MultipartRequest 클래스
: HTTP 요청에서 멀티파트(form-based file upload) 데이터를 파싱하고 처리하기 위한 도우미 클래스
	- 파일 업로드를 다루기 위한 Java 웹 애플리케이션에서 사용되는 클래스 
	- 멀티파트 요청은 클라이언트에서 웹 서버로 파일을 업로드하는 데 사용됨


o 생성자
MultipartRequest(javax.servlet.http.HttpServletRequest request,
		 java.lang.String saveDirectory,
		 int maxPostSize,
		 java.lang.String encoding,
		 FileRenamePolicy policy)
	- request: 파일 업로드를 처리할 HTTP 요청 객체인 HttpServletRequest
	- saveDirectory: 업로드된 파일이 저장될 디렉토리의 경로를 나타내는 문자열
	- maxPostSize: 업로드할 데이터의 최대 크기를 나타내는 정수
	- encoding: 문자열 데이터를 처리하는 데 사용할 문자 인코딩 방식을 지정하는 문자열
	- policy: 파일 업로드 시 파일 이름을 다시 지정하는 데 
		 사용할 파일 이름 변경 정책을 나타내는 객체
		- policy 매개변수에 new DefaultFileRenamePolicy()를 전달
		  : 파일 이름 변경 정책을 설정하는 데 사용됨


* DefaultFileRenamePolicy 클래스
  : 파일 업로드 시 발생할 수 있는 파일 이름 충돌을 방지하기 위한
  기본 파일 이름 변경 정책을 제공하는 Java 클래스
	- 업로드된 파일 이름의 기본 부분을 유지하며, 확장자(extension) 부분을 수정
	- 충돌을 피하기 위해 원본 파일 이름 뒤에 밑줄과 일련번호를 추가
	- 변경된 파일 이름을 반환하고, 이로 인해 중복 파일 이름이 처리됨
	ex) file.txt"라는 파일을 업로드하는 경우,
	   "file_1.txt", "file_2.txt", "file_3.txt" 처럼 변경하여 저장




o MultipartRequest 클래스의 주요 메소드
	- MultipartRequest 객체를 사용하여 업로드된 파일과 폼 데이터에 접근하는 데 사용됨
	- 업로드된 파일이나 파라미터가 없는 경우에 대비하여 널(null) 체크를 해주어야 함
1) String getParameter(String paramName)
 : MultipartRequest 객체를 사용하여
    주어진 파라미터 이름(paramName)에 해당하는 문자열 파라미터 값을 반환
   	- 파일 업로드와 관련된 일반적인 폼 필드의 파라미터의 값을 가져오는 데 사용
	- 주어진 파라미터 이름(paramName)에 해당하는 문자열 파라미터의 값을 반환
	- Java 서블릿 또는 JSP에서 MultipartRequest 객체를 사용하여
	   POST방식으로 전송된 파라미터에 접근 가능
	- getParameter를 사용하여 텍스트 파라미터를 가져올 때,
	 해당 파라미터가 없으면 null이 반환됨
ex)	String textValue = multi.getParameter("username");



2) String getOriginalFileName(String paramName)
 : MultipartRequest 객체를 사용하여
   주어진 파라미터 이름(paramName)에 해당하는 업로드된 파일의 원본 파일 이름을 반환
	- 클라이언트가 업로드한 파일의 실제 이름 가져옴
구문)	String getOriginalFileName(String paramName)
		- paramName: 원본 파일 이름을 가져올 파일 필드의 파라미터 이름

ex)	String originalFileName = multi.getOriginalFileName("uploadFile");
	// "uploadFile"이라는 파일 업로드 필드에 업로드된 파일의 원본 파일 이름을 가져옴
	if (originalFileName != null) {
	    out.println("업로드된 파일의 원본 파일 이름: " + originalFileName);
	} else {
	    out.println("파일 업로드 실패.");
	}



3) String getFilesystemName(String paramName)
 : MultipartRequest 객체를 사용하여
   주어진 파라미터 이름(paramName)에 해당하는 업로드된 파일의 시스템 파일 이름을 반환
	- 시스템 파일 이름은 중복 파일을 피하기 위해 변경될 수 있음
	- 이 이름은 파일을 저장한 디렉토리에 있는 파일의 이름을 나타냄
구문)	String getFilesystemName(String paramName)
		- paramName: 시스템 파일 이름을 가져올 파일 필드의 파라미터 이름

ex)	String fileName = multi.getFilesystemName("uploadFile");
	// "uploadFile"이라는 파일 업로드 필드에 업로드된 파일의 시스템 파일 이름을 가져옴
	if (filesystemFileName != null) {
	    out.println("업로드된 파일의 시스템 파일 이름: " + filesystemFileName);
	} else {
	    out.println("파일 업로드 실패.");
	}


4) Enumeration<String> getFileNames()
 : 모든 업로드된 파일의 파라미터 이름을 나타내는 열거형(Enumeration)을 반환
	- 업로드된 모든 파일의 파라미터 이름에 접근할 수 있음
구문)	Enumeration<String> getFileNames()

ex)	Enumeration<String> fileParamNames = multi.getFileNames();
	// 모든 업로드된 파일의 파라미터 이름을 가져옴

	// while 루프를 사용하여 열거형을 반복하면서 각 파일 파라미터 이름을 출력
	while (fileParamNames.hasMoreElements()) {
	    String paramName = fileParamNames.nextElement();
	    out.println("업로드된 파일 파라미터 이름: " + paramName);
	}



