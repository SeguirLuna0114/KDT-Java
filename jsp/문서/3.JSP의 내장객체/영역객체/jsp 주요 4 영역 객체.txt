o JSP 4가지 영역

1. Page Scope (페이지 영역)
  : 현재 JSP 페이지 내에서만 유효한 스코프
    => 같은 JSP 페이지 내에서만 데이터를 공유할 수 있음
	- 페이지 영역을 사용하기 위한 객체: pageContext 객체
	- 주로 현재 JSP 페이지 내에서 데이터를 임시로 저장하거나 전달하는 데 사용

	-  다른 JSP 페이지로 데이터를 전달하거나,
 	   페이지 내에서 임시 데이터를 저장할 때 유용

	- 페이지 영역에 데이터를 저장
	  : pageContext.setAttribute("name", value) 메소드 사용
	- 페이지 영역에서 데이터를 얻음
	   : ${name} 또는
	    <%= pageContext.getAttribute("name") %>와 같은 표현식을 사용


2. Request Scope (요청 영역):
 : 현재 HTTP 요청 내에서만 데이터를 공유하는 스코프
   => 같은 요청에서 여러 JSP 페이지 간에 데이터를 공유할 수 있음
	- 요청 영역을 사용하기 위한 객체: request 객체
	- 요청 영역은 주로 여러 JSP 페이지 간에 데이터를 공유하고 전달할 때 사용
	- 한 요청 내에서 다양한 JSP 페이지 간에 데이터를 전달할 때 유용

	- 요청 영역에 데이터를 저장
	 : request.setAttribute("name", value) 메소드를 사용
	- 요청 영역에서 데이터를 얻음
	 : ${name} 또는 
	   <%= request.getAttribute("name") %>와 같은 표현식을 사용


3. Session Scope (세션 영역)
 : 현재 세션 내에서 데이터를 공유하는 스코프
  => 세션은 클라이언트가 웹 애플리케이션에 접속한 후 브라우저를 닫을 때까지 유지됨
	"하나의 웹 브라우저와 관련된 영역"
	- 세션 영역을 사용하기 위한 객체: session 객체
	- 세션 영역은 주로 사용자의 상태를 추적하고 유지하기 위해 사용
	  ex)	로그인 정보나 사용자 선호 설정과 같은 데이터를 세션 영역에 저장

	- 세션 영역에 데이터 저장
	  : session.setAttribute("name", value) 메소드를 사용
	- 세션 영역에서 데이터를 얻음
	   : ${name} 또는 
	    <%= session.getAttribute("name") %>와 같은 표현식을 사용


4. Application Scope (애플리케이션 영역)
  : 웹 애플리케이션 전체에서 데이터를 공유하는 스코프
  => 웹 애플리케이션이 실행되는 동안 데이터가 유지됨
	- 애플리케이션 영역을 사용하기 위한 객체: application 객체
	- 주로 모든 사용자에게 공통적으로 사용되는 데이터를 저장하고 공유하기 위해 사용됨
	  ex)	데이터베이스 연결 풀, 설정 정보, 캐시 데이터와 같은 데이터를 저장

	- 애플리케이션 영역에 데이터를 저장
	  : application.setAttribute("name", value) 메소드를 사용
	- 애플리케이션 영역에서 데이터를 얻음
	   : ${name} 또는 
	    <%= application.getAttribute("name") %>와 같은 표현식을 사용



