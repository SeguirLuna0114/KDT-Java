* 페이지 이동 방법
	- 주로 클라이언트와 서버 간의 상호작용에서 사용

1. location.href (클라이언트 측 이동)
 : location.href는 클라이언트 측에서 사용되는 JavaScript의 일부
     이를 사용하여 현재 페이지를 다른 URL로 리다이렉션 가능
	- 클라이언트 측에서 이동하기 때문에 서버에 새로운 요청을 보내지 않고,
	 브라우저의 주소 표시줄만 변경됨
	 (현재 페이지의 URL을 변경하여 새로운 페이지로 이동)
	- 주로 페이지 내에서 사용자 경험을 개선하거나
	  클라이언트 측에서 페이지 이동을 수행할 때 사용

ex)	// JavaScript를 사용한 클라이언트 측 이동
	location.href = "newPage.jsp";



2. response.sendRedirect() (서버 측 이동)
 : response.sendRedirect()는 서버 측에서 사용되는 Java나 JSP 코드에서
   페이지 이동을 수행하는 메서드
   이를 사용하여 서버는 클라이언트에게 새로운 URL로 이동하도록 요청을 보냄
	- 클라이언트는 서버의 응답을 받고 새로운 URL로 재요청을 수행하므로,
	 서버에서 새로운 페이지를 처리
	- 주로 서버에서 리다이렉션을 제어하거나, 
	  사용자 인증 및 권한 검사 후 페이지 이동을 수행할 때 사용

ex)	// 서버 측에서 페이지 이동 (Java 또는 JSP)
	response.sendRedirect("newPage.jsp");


3. <meta> 태그
 : HTML 문서 내에서 사용되며,
  <meta> 태그를 통해 일정 시간이 지난 후 자동으로 새로운 페이지로 이동하도록 설정
	- 자동 리다이렉트: 페이지의 일부 내용을 표시한 후 일정 시간이 지난 후
	  		  다른 페이지로 자동으로 이동하는 데 사용

구문)	<meta http-equiv="refresh" content="초;url=대상-URL">
		- http-equiv: HTTP 헤더를 시뮬레이트함
			     "refresh" 값을 사용하여 페이지를 새로 고침하고 이동할 수 있게 함
		- content: 이 속성은 시간과 대상 URL을 정의
			  "초"는 대기 시간(초)을 나타내며, "url"은 이동할 페이지의 URL을 지정

ex)	5초 후 다른 페이지로 이동
	<meta http-equiv="refresh" content="5;url=https://www.example.com/new-page">
	

