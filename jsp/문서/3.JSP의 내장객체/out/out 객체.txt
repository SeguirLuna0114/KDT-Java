* out 객체
 : 클라이언트로 출력을 보내는데 사용
	- HTML, XML 또는 일반 텍스트를 생성하여 클라이언트 브라우저로 전송하는데 사용
	- JSP 페이지에서 HTML을 동적으로 생성하거나 다른 출력을 생성할 때 주로 사용
	- java.io.PrintWriter 클래스의 인스턴스


o 주요 메소드
1. void print(String s) 및 void println(String s)
 : 지정한 문자열 s를 출력
   println 메소드는 문자열을 출력한 후 줄 바꿈 문자(\n)를 자동으로 추가
	- 개행을 명확하게 하기위해 HTML <br> 태그를 사용
ex)	out.print("Hello, ");
	out.println("World!<br>");


2. void clear()
 : 출력 버퍼를 비워서 이전까지 출력한 내용을 삭제
ex)	out.clear();


3. void flush()
 : 출력 버퍼를 비우고 모든 내용을 클라이언트로 전송
ex)	out.flush();


4. void close()
 : 출력 스트림을 닫음
	- 일반적으로 JSP 페이지의 끝에서 자동으로 닫히므로 명시적으로 닫을 필요는 없음
ex)	out.close();


o 출력 버퍼 관련 메소드
1. out.getBufferSize()
 :  JSP 페이지 내에서 출력 버퍼의 크기를 반환하는 메소드
	- 출력 버퍼의 크기는 클라이언트로 데이터를 전송하기 전에
	  출력 버퍼에 저장할 수 있는 최대 바이트 수를 나타냄
	- 출력 버퍼의 크기를 확인할 수 있음
	- 대용량 데이터를 처리하거나 특정 출력 제어 작업을 수행할 때 유용
ex)	현재 JSP 페이지의 출력 버퍼 크기를 가져와서 출력
	<%
    		int bufferSize = out.getBufferSize();
    		out.println("Output Buffer Size: " + bufferSize);
	%>


2. out.getRemaining()
 : JSP 페이지 내에서 출력 버퍼에 남은 여유 공간의 바이트 수를 반환하는 메소드
	- 현재 출력 버퍼에 얼마나 많은 데이터를 추가로 쓸 수 있는지를 확인 가능
	-  대용량 데이터를 동적으로 생성하여 출력할 때 유용
ex)	현재 JSP 페이지의 출력 버퍼에 남은 여유 공간을 가져와서 출력	
	<%
    		int remaining = out.getRemaining();
    		out.println("Remaining Buffer Space: " + remaining + " bytes");
	%>




