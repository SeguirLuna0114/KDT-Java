* 선언 태그(<%! %> 태그)
 : JSP 페이지 내에서 전역 변수와 메서드를 선언할 때 사용됨
	- 선언된 변수와 메서드는 JSP 페이지 내의 
	  다른 스크립트릿(<% %> 태그)에서 사용할 수 있음
	- 페이지 내의 모든 스크립트릿에서 공유됨
	  => 코드 재사용과 가독성을 향상시킬 수 있음

구문)	<%! 
	    // 변수 선언
	    // 메서드 정의
	%>

o 선언 태그에서 주로 수행되는 작업
1. 변수 선언 및 초기화
ex)	<%! 
	    int counter = 0;
	    String message = "Hello, JSP!";
	%>

2. 메서드 정의
ex)	<%! 
	    public int add(int a, int b) {
	        return a + b;
	    }
	%>

3. 전역 상수 정의
ex)	<%! 
	    private static final int MAX_COUNT = 100;
	%>


o 선언 태그의 주요 특징
- 전역 범위 (Global Scope)
 : 선언 태그 내에서 선언된 변수와 메서드는 
   JSP 페이지의 모든 스크립트릿(<% %> 태그)에서 사용할 수 있음
	=> 선언 태그에서 선언한 요소는 JSP 페이지 내에서 전역 범위로 공유됨

- 클래스 멤버로 컴파일
 : 선언 태그 내에서 선언된 변수와 메서드는 
  서블릿으로 컴파일될 때 JSP 클래스의 멤버로 포함됨
	- 이로 인해 전역 변수는 해당 JSP 클래스의 인스턴스 변수로 변환되고,
	  메서드는 해당 클래스의 메서드로 컴파일됨

- JSP 페이지에서 코드 재사용
 : 선언 태그를 사용하여 변수와 메서드를 정의하면 
   이를 다양한 스크립트릿에서 재사용할 수 있음
	=> 이는 코드의 중복을 방지하고 유지보수성을 향상시킴

- 스크립트릿 태그와 분리
 : 선언 태그는 주로 전역 변수와 메서드를 정의하는 데 사용됨
  스크립트릿 태그는 주로 동적 로직을 작성하는 데 사용됨
	=> 이렇게 분리하면 코드의 가독성과 유지보수성이 향상

-변수 유효 범위
 : 선언 태그 내에서 선언한 변수는 해당 JSP 페이지의 스코프 내에서만 유효
  => 변수는 페이지 스코프로 제한됨


- 메서드와 객체 생성
 : 선언 태그 내에서 메서드를 정의하고 객체를 생성할 수 있음
 - 이를 통해 JSP 페이지에서 비즈니스 로직을 구현하고 
   데이터베이스 연동, 외부 서비스 호출 등의 작업을 수행할 수 있음


- 초기화 코드
 : 선언 태그 내에서 초기화 코드를 작성하여 
    페이지나 애플리케이션의 시작 시점에 실행할 수 있음
	- 이를 활용하여 데이터베이스 연결 초기화, 설정 로딩 등을 수행할 수 있음






