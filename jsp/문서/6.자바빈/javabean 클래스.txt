* JavaBean 클래스
  : Java 프로그래밍 언어에서 재사용 가능한 소프트웨어 컴포넌트를 만들기 위한
    규칙과 관례를 따르는 클래스
	- 객체의 상태를 캡슐화하고 그 상태에 액세스하고 
	  조작하기 위한 getter와 setter 메서드를 제공
	- Java 애플리케이션에서 구성 요소를 만들고 재사용하기 쉬움


o javabean 주요 특징
1. 시리얼라이즈 가능(Serializable)
 : JavaBeans는 주로 java.io.Serializable 인터페이스를 구현하여
     시리얼라이즈 가능하게 만듬
   => JavaBeans의 인스턴스를 스트림에 쉽게 저장하고 복원할 수 있어서
       파일에 객체를 저장하거나 네트워크를 통해 전송하는 등 다양한 시나리오에서 유용


2. 개인 필드(Private Fields)
 : JavaBeans에는 주로 객체의 상태를 나타내는 개인 필드가 있으며,
   이러한 필드는 getter 및 setter 메서드를 사용하여 노출됨


3. 공개 접근자 메서드(Public Accessor Methods)
 : JavaBeans는 개인 필드의 값을 읽고 설정하기 위한
    getter 메서드와 setter 메서드를 제공
	- Getter 메서드는 getPropertyName() 또는 논리형 속성의 경우
	   isPropertyName() 패턴을 사용
	- Setter 메서드는 setPropertyName(value) 형식으로 이름이 지정됨


4. 기본 생성자(Default Constructor)
 : JavaBeans는 주로 매개변수가 없는 기본 생성자(파라미터 없는 생성자)를 가져야 함
   => Class.newInstance() 메서드나 기본 생성자를 사용하는 프레임워크를 통해
      쉽게 인스턴스화할 수 있음


5. 사용자 정의 이벤트 처리(Custom Event Handling)
 : JavaBeans는 이벤트 리스너를 등록하고 특정 조건을 충족할 때 이벤트를 발생시켜
     다른 구성 요소가 JavaBeans의 상태 변경에 반응할 수 있도록 지원할 수 있음


6. 네이밍 관례(Naming Conventions)
 : JavaBeans는 속성 및 메서드의 네이밍 관례를 따름 
	- 속성 이름은 소문자로 시작하고 camelCase를 사용
	  (예: firstName, isAvailable). Getter 및 setter 메서드의 이름은 관례를 따름)



