* 액션태그
 : JSP 페이지 내에서 다양한 서버 측 작업을 수행하기 위해 사용
	- 일반적으로 JSP 페이지 내에서 Java 코드를 삽입하지 않고도
	   웹 애플리케이션의 동작을 제어하고 데이터를 처리하는 데 사용


o JSP 액션태그 종류-----------------------------------------------------------------------
1.forward 액션태그 -  <jsp:forward>
 : JSP 페이지에서 다른 페이지로 현재 요청을 전달하는 데 사용
	- 서버 측에서 페이지 간의 이동을 가능하게 함
	  (현재 페이지에서 다른 페이지로 이동시킬 때 사용)

	- 웹 애플리케이션에서 페이지 간의 이동을 관리하는 데 사용
	  ex)	사용자가 로그인 페이지에서 로그인에 성공하면,
	 	다시 방문자를 대시보드 또는 홈 페이지로 리다이렉트하는 데 사용
	- 일부 조건이 충족되었을 때만 특정 페이지로 이동해야 할 때 사용
	  ex)	사용자의 권한에 따라 다른 페이지로 전환할 때 사용
		<%-- 사용자 권한에 따라 페이지 이동 --%>
		<c:choose>
		    <c:when test="${userRole eq 'admin'}">
		        <jsp:forward page="adminPage.jsp" />
		    </c:when>
		    <c:otherwise>
		        <jsp:forward page="userPage.jsp" />
		    </c:otherwise>
		</c:choose>

	- 현재 JSP 페이지의 처리를 중단하고 지정된 대상 페이지로 제어를 넘김
	  => <jsp:forward> 태그 다음에 오는 코드는 실행X
	 => 현재 페이지의 내용은 클라이언트(화면)에 출력되지 않음
	    대신 전달된 페이지의 처리 결과가 클라이언트에게 출력됨

	- JSP 페이지의 일부를 재사용하고자 할 때 사용
	  ex)	 모든 페이지에 공통적으로 사용되는 header/footer를 별도의 JSP 파일로 분리하고, 
		<jsp:include> 또는 <jsp:forward>를 사용하여 모든 페이지에 포함
		<%-- 모든 페이지에서 공통 헤더 포함 --%>
		<jsp:include page="header.jsp" />

구문)	<jsp:forward page="targetPageURL" />
	- page 속성: 현재 요청을 전달하려는 대상 페이지의 URL 또는 상대 경로 지정		     
		     대상 페이지는 새로운 요청으로 실행되며, 그 결과가 클라이언트에 반환됨
	- targetPageURL: 전달하려는 대상 페이지의 경로를 나타내며 문자열로 지정됨


1-2. <jsp:forward> 태그와 <jsp:param> 태그 함께 사용
   : 요청을 전달하는 동안 매개변수를 함께 전달할 수 있음
	- 대상 페이지에서 전달된 매개변수를 활용하여
	  동적인 처리를 수행하거나 정보를 공유하는 데 유용
	- forward 액션태그 안에 param태그를 사용하여 매개변수와 값을 포함시키면,
	   해당 매개변수는 대상 페이지로 전달되고,
	  대상 페이지에서 request.getParameter("name")메소드로 받을 수 있음

구문)	<jsp:forward page="targetPage.jsp">
	    <%-- param1과 param2라는 두 개의 매개변수와
		 그 값들을 <jsp:forward> 안에 포함 --%>
	    <jsp:param name="param1" value="value1" />
	    <jsp:param name="param2" value="value2" />
	</jsp:forward>

-------------------------------------------------------------------------------------

2. include 액션태그 - <jsp:include>
  : JSP 페이지에서 다른 JSP 페이지 또는 서블릿의 내용을 현재 페이지에 포함시키는 데 사용
	- 웹 애플리케이션의 여러 페이지에서 
	  공통된 요소(예: 헤더, 푸터, 사이드바)를 모듈화하고 재사용할 수 있음
	  => 코드 중복을 줄이고 유지보수를 쉽게 할 수 있음
	  ex)	<!-- header.jsp와 footer.jsp를 포함 -->
		<jsp:include page="header.jsp" />
		<%-- 페이지 고유 내용 --%>
		<jsp:include page="footer.jsp" />

	- 동적으로 다른 페이지의 내용을 포함시킬 수 있음
	   => 요청 시에 포함되는 페이지의 최신 내용을 가져올 수 있음
	    = 웹 애플리케이션의 업데이트와 유연성을 제공
	  => 조건에 따라 다른 페이지를 포함시키는 데 유용
	 ex)	<%-- 다른 페이지에서 동적 데이터를 가져와 표시 --%>
		<jsp:include page="dynamicData.jsp" />

	- 현재 페이지와 포함되는 페이지 간에 데이터를 공유 가능
	   요청 매개변수, 세션 속성 등을 이용하여 데이터를 전달하거나 공유할 수 있음

	- <jsp:include>를 사용하여 포함된 페이지의 내용은
	   클라이언트 브라우저에서 직접 볼 수 X
	  = <jsp:include> 액션 태그가 서버 측에서 실행되어,
	    포함된 페이지의 내용을 현재 페이지에 삽입한 다음 클라이언트에게 전달하기 때문
	   => 클라이언트는 최종 결과 페이지만을 받게됨

구문)	<jsp:include page="includedPage.jsp" />
	- page 속성: 포함시키려는 대상 페이지의 경로 지정
		    현재 JSP 페이지로부터 상대 경로 또는 절대 경로가 될 수 있음


2-1. <jsp:include> 태그와 <jsp:param> 태그 함께 사용
   : 포함되는 페이지로 데이터를 전달하여,
    포함되는 페이지에서 전달된 데이터를 활용하여 동적 처리를 수행하거나 정보를 공유할 수 있음
	- include 액션태그 안에 param태그를 사용하여 매개변수와 값을 포함시키면,
	   해당 매개변수는 포함되는 페이지로 전달되고,
	  포함되는 페이지에서 request.getParameter("name")메소드로 받을 수 있음

구문)	<jsp:include page="includedPage.jsp">
	    <%-- param1과 param2라는 두 개의 매개변수와
		 그 값들을 <jsp:include> 안에 포함 --%>
	    <jsp:param name="param1" value="value1" />
	    <jsp:param name="param2" value="value2" />
	</jsp:include>


2-2. <jsp:include> 액션 태그의 flush 속성
  : 포함된 페이지의 출력을 버퍼에서 클라이언트로 즉시 보낼지 여부를 제어하는 데 사용
	- 불리언(boolean) 값을 가지며 기본값은 true

구문)	<jsp:include page="includedPage.jsp" flush="true" />
	- flush 속성을 true로 설정한 경우,
	  포함된 페이지의 출력은 즉시 클라이언트로 전송되며
	   페이지의 나머지 부분은 실행되지 않음
	  => 포함된 페이지가 버퍼링 없이 즉시 출력되어야 하는 경우 유용


구문)	<jsp:include page="includedPage.jsp" flush="false" />
	- flush 속성을 false로 설정한 경우,
	  포함된 페이지의 출력은 버퍼에 모아져 나중에 한꺼번에 클라이언트로 전송됨
	  => 포함된 페이지가 일부 내용을 생성하고, 나중에 다른 부분을 생성하는 경우 유용



-----------------------------------------------------------------------------------------

3. param 액션태그 - <jsp:param>
  : JSP 페이지에서 다른 페이지를 포함하거나 전달할 때
    매개변수(파라미터)의 이름과 값을 설정하는 데 사용 
	- 주로 <jsp:include>와 <jsp:forward>와 함께 사용되며,
	 요청을 전달하거나 포함되는 페이지로 데이터를 전달하는 데 유용
	- <jsp:param>은 서버 측에서 데이터를 전달하는 데 사용
	 => 이는 클라이언트에게 노출되지 않고 서버에서만 처리됨

구문)	<jsp:param name="parameterName" value="parameterValue" />
		- name: 설정할 매개변수의 이름을 지정
		- value: 매개변수에 할당할 값을 지정

ex) <jsp:param>을 사용하여 매개변수를 설정
	<jsp:include page="targetPage.jsp">
	    <jsp:param name="param1" value="value1" />
	    <jsp:param name="param2" value="value2" />
	</jsp:include>

-----------------------------------------------------------------------------------------






