* jsp 에러처리


o JSP에서 각 페이지 별로 에러 페이지를 지정하는 방법
 : page 디렉티브를 사용하여 페이지 자체에 에러 페이지를 설정
	- 각 JSP 페이지가 자체적인 에러 페이지를 가질 수 있음

단계1. JSP 페이지 상단에 page 디렉티브를 추가
		- isErrorPage 속성을 true로 설정하여 현재 페이지가 에러 페이지임을 지정
		- errorPage 속성: 에러가 발생했을 때 리다이렉트할 에러 페이지의 경로를 설정
구문)	<%@ page language="java" contentType="text/html; charset=UTF-8"
    	    pageEncoding="UTF-8" isErrorPage="true" errorPage="/myErrorPage.jsp" %>
		- errorPage="/myErrorPage.jsp"
		 : 에러가 발생했을 때 리다이렉트할 에러 페이지의 경로를 설정
		    이 경로는 현재 JSP 파일에서의 상대 경로 또는 절대 경로가 될 수 있음


단계2. 예외 처리 또는 에러 핸들링 구현
		- 현재 JSP 페이지에서는 예외 처리 블록을 사용하여
		  예외를 처리하거나 에러 핸들링 로직을 구현
		  => 이 부분에서 예외가 발생하면 어떤 동작을 수행할지를 정의
구문)	<%
	try {
	    // 예외가 발생할 수 있는 코드
	} catch (Exception e) {
	    // 예외 처리 또는 에러 핸들링 로직
	    response.sendRedirect("/myErrorPage.jsp");
	}
	%>


o web.xml 파일을 사용한 전역 에러 페이지 설정
 : 모든 JSP 페이지에 동일한 에러 페이지를 적용하며, 
  예외 유형 또는 HTTP 상태 코드에 따라 다른 에러 페이지를 지정할 수 있음
단계1. web.xml 파일 열기
 : 웹 애플리케이션의 web.xml 파일을 찾고 
    텍스트 에디터 또는 통합 개발 환경(IDE)에서 열기
	- 이 파일은 일반적으로 웹 애플리케이션의 WEB-INF 디렉터리 내에 위치

단계2. <web-app> 요소 내에 <error-page> 요소 추가
 : web.xml 파일에서 <web-app> 요소 내부에 <error-page> 요소를 추가
	- <error-page> 요소는 에러 페이지를 설정하는데 사용
구문)	<web-app>
	    <!-- 다른 설정들 -->

	    <error-page>
	        <!-- 에러 코드 또는 예외 타입 지정 -->
	        <error-code>404</error-code> <!-- 예를 들어 404 에러 -->
	        <!-- 또는 -->
	        <!-- <exception-type>java.lang.Exception</exception-type> -->
	
	        <!-- 에러 페이지의 경로 지정 -->
	        <location>/error404.jsp</location>
	    </error-page>

	    <!-- 다른 에러 페이지 설정들 -->

	</web-app>

		- <error-code>: 설정하려는 HTTP 에러 코드를 지정
		- exception-type>: 예외 타입으로 에러 페이지를 설정하려면
				  해당 예외 클래스의 전체 경로를 지정할 수 있음
		- <location>: 지정한 에러 코드나 예외가 발생했을 때 이동할 에러 페이지의 경로를 지정

단계3. 에러 페이지 설정 완료
 : 설정이 완료되면 web.xml 파일을 저장

단계4. 애플리케이션 재배포 또는 서버 재시작
 : 변경 사항을 적용하려면 애플리케이션을 재배포하거나 웹 서버를 재시작
    이렇게 하면 web.xml 파일의 수정 사항이 적용됨





