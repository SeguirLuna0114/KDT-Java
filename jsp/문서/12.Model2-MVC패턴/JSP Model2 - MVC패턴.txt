* JSP (JavaServer Pages) 모델2
 : "MVC" (모델-뷰-컨트롤러) 아키텍처로도 알려진 디자인 패턴
   Java로 웹 애플리케이션을 개발하는 데 사용되는 아키텍처 패턴
	- 애플리케이션을 Model-View-Controller(MVC) 구조로 구성하여 개발하는 방법을 지원
	- MVC 패턴은 응용 프로그램의 다른 측면을 분리하고 유지 관리하기 쉽게 만드는 데 도움이 됨

	- 응용 프로그램의 관심사를 분리하여 개발 및 유지 관리를 단순화하며,
	  코드의 재사용성과 확장성을 향상시킬 수 있음
	- 여러 개발자가 동시에 작업할 때 협업을 간소화하고 프로젝트의 가독성을 향상시킴


* MVC(Model-View-Controller)
 : 소프트웨어 아키텍처 및 디자인 패턴으로서,
   응용 프로그램을 세 가지 주요 구성 요소로 나누어 개발하는 방법을 제시하여
  사용자 인터페이스 기반 애플리케이션을 개발하고 관리하기 위한 효과적인 방법을 제공함



o JSP(Model 2)의 주요 구성 요소
1. Model (모델)
 : 모델은 애플리케이션의 데이터와 비즈니스 로직을 나타냄
	- 데이터의 저장, 처리, 및 관리를 담당
	- 데이터는 데이터베이스, 파일 또는 다른 소스에서 가져올 수 있으며,
	  데이터 조작 및 업데이트를 수행
	- 응용 프로그램의 핵심 로직을 포함하며 데이터를 제어하고 유지


2. View (뷰)
 : 뷰는 사용자에게 정보를 표시
	- 사용자가 응용 프로그램과 상호 작용할 때 렌더링 및 표시를 담당
	- 주로 웹 페이지로 표현되며, 사용자 인터페이스의 일부
	- 뷰는 모델의 데이터를 가져와 화면에 나타내거나 사용자에게 정보를 표시
	- 사용자와 응용 프로그램 간의 상호 작용을 담당


3. Controller (컨트롤러)
 : 컨트롤러는 모델과 뷰 간의 상호 작용을 조정하고 제어
	- 사용자의 입력을 처리하고 해당 요청에 대한 적절한 작업 및 비즈니스 로직을 실행
	- 요청에 따라 모델을 업데이트하고 뷰를 선택하여 사용자에게 데이터를 제공
	- 컨트롤러는 요청에 대한 라우팅 및 비즈니스 로직의 제어를 수행







