* while문
 : 주어진 조건이 참인 경우에 계속해서 코드 블록을 실행하는 루프를 만드는데 사용
	-  조건을 먼저 평가하고, 
	   조건이 참인 경우에만 반복 작업을 수행
	   조건이 거짓이면 반복이 종료

구문)	while (조건) {
    		// 조건이 참인 동안 실행될 코드
	}
		- 조건: 루프가 실행될 조건을 나타내는 부분
			조건이 참인 동안 루프가 계속 실행

ex) 변수 i가 1부터 시작하여 5보다 작거나 같은 동안 반복해서 값을 출력
 	var i = 1;
	while (i <= 5) {
    		console.log(i);
    		i++;
	}


	1) 조건이 참(True)인 경우에만 반복 작업을 실행
		- 조건은 반복문 진입 전에 평가됨
		- 반복문 내에서 조건이 평가되고 참일 경우 루프가 계속 실행됨

	2) while문은 루프 진입 전에 조건을 평가하기에
	   조건이 처음부터 거짓인 경우 루프가 한 번도 실행되지 않을 수 있음

	3) 조건을 항상 참으로 설정하면 while문이 무한 루프에 빠질 수 있음



o do-while문
 : while문과 유사하게 반복 작업을 수행하는 루프 구조
	- 조건을 루프 블록 실행 이후에 평가
	- 루프 블록이 최소한 한 번은 실행된다는 차이점이 있음

구문)	do {
    		// 반복할 코드
	} while (조건);

		- 반복할 코드: 실행할 코드 블록을 나타냄
			     이 코드 블록은 조건을 평가하기 전에 최소한 한 번은 실행됨
		- 조건: 루프가 계속 실행될지 여부를 결정하는 조건
			조건이 true인 동안 반복이 계속됨

	1) do 블록 내부의 코드가 실행된 후에 while 조건이 평가됨
		- 최소한 한 번의 실행은 보장

	2) do-while문은 while문과 마찬가지로 조건이 true인 경우에만 반복

	3) do-while문은 반복을 시작하기 전에 조건을 미리 확인하지 않으므로
	   루프를 실행하고 나중에 조건을 확인할 때 유용


ex) 1부터 4까지의 값을 출력하고, count가 5보다 작은 동안 루프가 계속됨
	var count = 1;

	do {
    		console.log(count);
    		count++;
	} while (count < 5);








