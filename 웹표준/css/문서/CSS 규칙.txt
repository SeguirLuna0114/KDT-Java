o CSS 규칙 작성
	- CSS 규칙은 선택자와 중괄호로 묶인 선언 블록으로 구성
	1. 선택자(Selectors): 요소를 선택하는 방법
		- 요소의 이름, 클래스, 아이디 등을 사용하여 지정할 수 있음
		1) 요소 이름에 스타일 적용
		p: <p> 요소에 스타일을 적용
		2) 클래스 이름에 스타일 적용 
		.button: class 속성이 "button"인 요소에 스타일을 적용합니다.
		3) id에 스타일 적용
		#header: id 속성이 "header"인 요소에 스타일을 적용합니다.
		4) 여러 개의 선택자를 동시에 사용
		h1, h2, h3: 여러 개의 선택자를 쉼표로 구분하여 동시에 선택할 수 있음
		5) 자식 선택자(하위 선택자) : 요소 내부에 있는 자식 요소에 스타일 적용
		p a : <p> 요소 내부에 있는 모든 <a> 요소를 선택
		6) 선택자에서 와일드카드(와일드카드 문자)를 사용
		  (1) 별표(*) 와일드카드 : 모든 요소를 선택하는 데 사용
		 (2) 일반 와일드카드 문자 (? 또는 _) : 특정 문자 패턴을 찾는 데 사용
			- 일반 와일드카드 문자는 일치하는 문자 하나를 나타냄
			- 와일드카드 문자 ? 또는 _는 주로 
			   속성 선택자(attribute selector)와 함께 사용
			ex) [class^="box_"] {} : 클래스 속성 값이 "box_"로 시작하는 요소


	2. 선언 블록(Declaration Block): 중괄호 {}로 묶여 있는 부분
		- 스타일 속성과 값을 정의
		- 속성의 값은 콜론(:)으로 구분하고, 각 규칙은 세미콜론(;)으로 구분
		o 스타일 속성
		color, background-color, font-size, font-family, padding
		1) color: 글자 색상을 지정
		2) background-color: 배경 색상을 지정
		3) font-size: 글꼴 크기를 지정
		4) font-family: 글꼴을 지정
			- 글꼴1, 글꼴2처럼 콤마를 사용하여 or을 설정
			ex) font-family: "Arial", sans-serif; 
			    - Arial 또는 sans-serif 글꼴 사용
		5) text-align: 텍스트의 정렬을 지정
			- center, right, left
		6) margin 및 padding: 요소의 외부 여백과 내부 여백을 지정
			- margin : 외부 여백을 px로 지정
			- padding: 내부 여백을 px로 지정
		7) border: 테두리 스타일, 두께 및 색상을 지정
			- border-style: 테두리 스타일을 지정
				- solid (실선), dotted (점선), dashed (대시선),
				  double (이중선), none (테두리 없음)
			- border-width: 테두리의 두께를 px (픽셀) 단위로지정
			- border-color: 테두리의 색상을 지정

		8) width 및 height: 요소의 너비와 높이를 지정
		9) display: 요소의 표시 방법을 지정
			- 요소를 블록 레벨 요소, 인라인 요소, 인라인 블록 요소 등으로 설정
			- block: 요소를 블록 레벨 요소로 표시
				블록 레벨 요소는 항상 새로운 줄에서 시작
			 	가로 영역을 100% 차지하며 수직으로 쌓임
			- inline: 요소를 인라인 요소로 표시
				인라인 요소는 텍스트와 동일한 줄에 나타나며
				가로 영역만 차지하며 수직으로 쌓이지 않음
			- none : 요소를 화면에서 숨김
				요소가 화면에 표시되지 않으며 공간도 차지하지 않음


o 다중 클래스 적용/선택
 :  CSS 클래스를 동시에 적용하는 것
	- HTML 요소에 여러 클래스를 할당하여 
	  각 클래스가 정의한 스타일을 모두 적용하는 방법

1. 클래스 속성에 공백으로 구분된 여러 클래스 이름을 지정
	<div class="class1 class2 class3">다중 클래스 적용 예시</div>
	- <div> 요소에 "class1," "class2," "class3" 세 개의 클래스가 적용
	
2. 다중 클래스를 선택하려면 여러 클래스 이름을 연결하고 
   점(.)으로 시작하여 선택자를 정의
	.class1.class2.class3 {
    		/* 스타일 정의 */
	}

	또는
	.class1 {
    		/* 스타일 정의 */
	}
	.class2 {
    		/* 스타일 정의 */
	}
	.class3 {
    		/* 스타일 정의 */
	}


o 속성 선택자(Attribute Selector)
 : HTML 요소의 특정 속성 값을 기반으로 해당 요소를 선택하는 방법
구문)	"attribute" 속성 값이 "value"인 모든 <elementName>요소에 스타일 적용
	<head>
		<style>
			[elementName[attribute="value"]] {
    				/* 스타일 정의 */
			}
		</style>
	</head>

			- elementName: 스타일을 적용하려는 HTML 요소의 이름
					생략하면 어떤 HTML 요소에든 스타일을 적용
			- attribute: 스타일을 적용하려는 속성의 이름을 중괄호 안에 작성
			- value: 선택하려는 속성의 값


o 자식 선택자(Child Selector) ">"
 : 특정 요소의 자식 요소 중에서 특정 요소를 선택하려는 경우에 사용
	- 요소 간의 직접적인 부모-자식 관계가 중요할 때 ">"를 사용
	1) 특정 요소의 직접적인 자식에만 적용하려는 경우에 사용
		ex)	div > p {
    				/* 직접적인 자식 <p> 요소에만 적용 */
			}

	2) 다른 스타일 규칙과 충돌을 피하려고 할 때
		- 다른 선택자가 같은 요소를 선택하더라도 
		  >를 사용하여 직접적인 자식에만 스타일을 적용
		ex)	.container > p {
    				/* .container 클래스 하위의 직접적인 <p> 요소에만 적용 */
			}


o 가상 클래스 선택자 / 반응 선택자(Virtual Class Selector)
 : 특정 상태나 사용자 동작에 반응하여 스타일을 적용
	- 요소의 상태나 동작에 따라 스타일을 동적으로 변경 가능
	- 사용자 경험을 향상시키고 시각적 효과를 부여하는 데 유용

	1) :hover: 마우스 커서가 요소 위로 올라갔을 때 스타일을 적용
		selector:hover {
   			/* 스타일 정의 */
		}


	2) :active: 요소가 활성 상태일 때 스타일을 적용
		- 사용자가 요소를 클릭하거나 키보드로 선택할 때 활성 상태가 됨
		selector:active {
    			/* 스타일 정의 */
		}


	3) :focus: 요소가 포커스를 받을 때 스타일을 적용
		- 입력 양식 요소나 링크에 사용
		- 사용자가 해당 요소에 초점을 맞추면 스타일을 변경할 수 있음
		selector:focus {
    			/* 스타일 정의 */
		}


	4) :not() : 특정 조건을 충족하지 않는 요소를 선택
		ex) :not(.no-style)는 "no-style" 클래스를 가지고 있지 않은 모든 요소
		selector:not(condition) {
    			/* 스타일 정의 */
		}


	5) :enabled : 입력 양식 요소 중에서 활성 상태인(enabled) 요소를 선택하는 데 사용
		- 사용자가 상호작용 가능한(form 요소나 버튼 등) 
		  입력 요소에 대한 스타일을 지정
		- 주로 입력 양식 요소에 사용
			- 버튼(Button): "확인" 또는 "제출" 버튼이 활성 상태일 때
			- 텍스트 입력란(Input Text)
			- 라디오(Radio) 및 체크박스(Checkbox)
			- 드롭다운 메뉴나 선택 목록이 활성 상태일 때
			- 폼(form) 입력요소
		- 사용자에게 어떤 요소가 활성화되어 있고 상호작용 가능한지 
		 시각적으로 알려주는 데 유용
		element:enabled {
    			/* 활성 상태인 요소에 대한 스타일 정의 */
		}
			- element: 활성 상태인(enabled) 요소를 선택하려는 CSS 선택자

	6) :disabled : 입력 양식 요소 중에서 비활성 상태인(disabled) 요소를 선택하는 데 사용
		- 사용자에게 상호작용할 수 없는 입력 요소에 대한 스타일을 지정
		- 주로 입력 양식 요소에 사용
			- 버튼(Button): 사용자가 버튼을 클릭할 수 없는 경우
			- 텍스트 입력란(Input Text)
			- 라디오(Radio) 및 체크박스(Checkbox)
			- 드롭다운 메뉴나 선택 목록이 비활성 상태일 때
			- 폼(form) 입력요소
		element:disabled {
    			/* 비활성 상태인 요소에 대한 스타일 정의 */
		}
			- element: 비활성 상태인(disabled) 요소를 선택하려는 CSS 선택자






